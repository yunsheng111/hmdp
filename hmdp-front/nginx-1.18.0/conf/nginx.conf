worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/json;

    sendfile        on;

    keepalive_timeout  65;
    
    # 日志格式定义
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    
    # 开启访问日志
    access_log  logs/access.log  main;
    
    # 开启错误日志
    error_log  logs/error.log  warn;

    # 增加客户端请求缓冲区大小
    client_body_buffer_size 256k;
    client_max_body_size 20m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # 增加连接超时设置
    client_header_timeout 120s;
    client_body_timeout 120s;

    server {
        listen       8080;
        server_name  localhost;
        # 指定前端项目所在的位置
        location / {
            root   html/hmdp;
            index  index.html index.htm;
            # 添加CORS头
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range,Authorization';
        }

        # 添加专门的图片路径映射
        location /imgs/ {
            alias   html/hmdp/imgs/;
            autoindex on;  # 允许目录浏览
            expires 7d;    # 设置缓存时间
            add_header Cache-Control public;  # 允许公共缓存
            add_header Access-Control-Allow-Origin *;  # 允许跨域访问
            
            # 添加调试日志
            access_log  logs/imgs_access.log  main;
            error_log   logs/imgs_error.log  debug;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }


        location /api {
            default_type  application/json;
            #internal;
            keepalive_timeout   60s;
            keepalive_requests  1000;
            #支持keep-alive
            proxy_http_version 1.1;
            rewrite /api(/.*) $1 break;
            proxy_pass_request_headers on;
            #more_clear_input_headers Accept-Encoding;
            proxy_next_upstream error timeout;
            proxy_pass http://127.0.0.1:8081;
            # proxy_pass http://backend;

            # 增加超时设置
            proxy_connect_timeout 60s;
            proxy_read_timeout 120s;
            proxy_send_timeout 120s;

            # 增加缓冲区设置
            proxy_buffer_size 32k;
            proxy_buffers 8 32k;
            proxy_busy_buffers_size 128k;

            # 增加错误处理
            proxy_intercept_errors on;
            
            # 添加调试日志
            access_log  logs/api_access.log  main;
            error_log   logs/api_error.log  info;
        }
    }

    # 暂时注释掉负载均衡配置，直到确认两个实例都正常运行
    # upstream backend {
    #     server 127.0.0.1:8081 max_fails=5 fail_timeout=10s weight=1;
    #     server 127.0.0.1:8082 max_fails=5 fail_timeout=10s weight=1;
    # }
}